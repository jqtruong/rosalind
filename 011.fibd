#! /bin/bash -e

. lib/fib

# Taking the same concept as `rabbit_fib' but given an extra paramater for a mortality rate.
rabbit_fibd(){
    local data="$(<"$1")"       # contains "n m"

    fib_mem_init "$data 1"

    for (( i=${#fib[@]}; i<n; i++ ))
    do total=0
       for (( y=i-2; y>=i-m; y-- ))
       do if [[ $y -lt 0 ]]
          then total=$(calc $total + 1); break
          else total=$(calc $total + ${fib[y]})
          fi
       done

       fib+=($total)
    done

    fib_done
}

# To help finding a pattern, this writes a graph of what it looks like after `n' months with a `m' mortality rate.
rabbit_fibd_graph() {
    local N= M= K=1
    read n m <<< "$(<"$1")"
    declare -A fib_graph=(
        [0]="0"
    )

    for (( i=1; i<$n; i++ ))
    do
        # fib_graph[$i]=$(echo "${fib_graph[i-1]}"           |
        #                     grep -Eo '[[:digit:]+]'        |
        #                     lib/fibd_graph.awk -v m=$m k=$k)
        echo "${fib_graph[i-1]}" #            |
        # grep -Eo '[[:digit:]+]'        |
        # lib/fibd_graph.awk -v m=$m k=$k
    done

    for (( i=0; i<$n; i++ )); do
        echo "$i: ${fib_graph[$i]}"
    done
}
