#! /bin/bash -ue

# http://rosalind.info/problems/iev/

# iev something Expected Value

. lib/calc

# if one parent has at least one dominant, ...
GENOTYPES=(
    AA-AA
    AA-Aa
    AA-aa
    Aa-Aa
    Aa-aa
    aa-aa
)

# e.g. Aa-aa:
## |   | A | a |
## +---+---+---+
## | a | 1 | 0 |
## | a | 1 | 0 |
# (1 + 0 + 1 + 0) / 4 = 1/2
DOMINANT_GENE_PERCENT=(
    1.00
    1.00
    1.00
    0.75
    0.50
    0.0
)

avg() {            # Average given a list of counts per group and a scale factor
    [[ ! -f "$1" ]] && {
        echo "$1 doesn't exist."
        exit 1
    }

    local cpdgg=( $(<"$1") )    # Counts Per Dominant Gene Groups
    local cs=$2                 # Count Scaling
    local ccg=                  # Count in a Current Group
    local dgpcp=                # Dominant Gene Percentage for Current Group
    local norms=() # counts * percentages (i think that's called normalization...?)

    for ((i=0; i<${#DOMINANT_GENE_PERCENT[@]}; i++)); do
        ccg=${cpdgg[$i]}
        dgpcp=${DOMINANT_GENE_PERCENT[$i]}
        norms+=( $(calc "scale=2; $ccg * $dgpcp") )
    done

    # e.g. given `cpdgg' as "1 0 0 1 0 1", then the following will
    # calculate:
    ## scale=2; 0 + (1.00 * 2) + (0.00 * 2) + (0.00 * 2) + (0.75 * 2) + (0.00 *
    ## 2) + (0.00 * 2)
    # where the leading 0 to start with something.
    calc "scale=2; 0$(printf " + (%.2f * $cs)" ${norms[@]})"
}

deo() {                         # Dominant Expected Offsprings
    avg "$1" 2
}
